generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  login    String  @unique
  password String
  Token    Token?
  isStaff  Boolean @default(false)
}

model Token {
  id     Int    @id @default(autoincrement())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Photoset {
  id    String   @id @default(uuid())
  name  String
  date  DateTime @db.Date
  type  String
  Photo Photo[]
}

model Photo {
  id         String   @id @default(uuid())
  path       String
  photoset   Photoset @relation(fields: [photosetId], references: [id], onDelete: Cascade)
  photosetId String

  @@index([photosetId])
}

model Portfolio {
  id             String           @id @default(uuid())
  name           String
  published      Boolean          @default(false)
  PortfolioPhoto PortfolioPhoto[]
}

model PortfolioPhoto {
  id          String    @id @default(uuid())
  path        String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  portfolioId String
}

model Backstage {
  id             String              @id @default(uuid())
  name           String
  BackstagePhoto BackstagePhoto[]
}

model BackstagePhoto {
  id          String    @id @default(uuid())
  path        String
  backstage   Backstage @relation(fields: [backstageId], references: [id], onDelete: Cascade)
  backstageId String
}

model Preset {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  original    String
  result      String
  file        String
}
